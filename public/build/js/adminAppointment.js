import{serverUrl}from"./config.js";document.addEventListener("DOMContentLoaded",()=>{initApp()});const initApp=()=>{setDetailsButtons(),setDeleteButtons()},setDetailsButtons=()=>{document.querySelectorAll("[name='detailsButton']").forEach(e=>{e.addEventListener("click",e=>{const t=e.target;t.classList.toggle("rotate");const n=t.dataset.idAppointment;t.classList.contains("rotate")?showAppointmentDetails(n):hideServices(n)})})},setDeleteButtons=()=>{document.querySelectorAll("[name='deleteButton']").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.getAttribute("appointmentId");showDeleteDialog(t)})})},showAppointmentDetails=async e=>{if(document.querySelector(`[servicesAppointmentId="${e}"]`))return void(document.querySelector(`[servicesAppointmentId="${e}"]`).style.display="table-row");displayLoading(e);const t=serverUrl+"api/appointmentDetails",n=new FormData;n.append("appointmentId",e);try{const o=await fetch(t,{method:"POST",body:n}),i=await o.json();if(i.appointmentServices.length>0){const{appointmentServices:t}=i;document.querySelector(".trLoading").remove(),createServicesTables(t,e)}else console.log("No hay servicios")}catch(e){console.error(e)}},hideServices=e=>{document.querySelector(`[servicesAppointmentId="${e}"]`).style.display="none"},createServicesTables=(e,t)=>{let n=`\n        <tr servicesAppointmentId="${t}">\n            <td></td>\n            <td colspan="3" style="padding: 0 0 1rem 0;">\n                <table style="width: 100%;" cellspacing="0">\n                    <thead>\n                        <th>#</th>\n                        <th>Servicio</th>\n                        <th>Precio</th>\n                    </thead>\n                    <tbody>\n                        #servicesRows\n                    </tbody>\n                </table>\n            </td>\n            <td></td>\n            <td></td>\n        </tr>\n    `,o="";e.forEach(e=>{const{id:t,serviceName:n,price:i}=e;o+=`\n            <tr>\n                <td>${t}</td>\n                <td>${n}</td>\n                <td>$ ${i}</td>\n            </tr>\n        `}),n=n.replace("#servicesRows",o);document.querySelector(`[appointmentId='${t}']`).insertAdjacentHTML("afterend",n)},displayLoading=e=>{document.querySelector(`[appointmentId='${e}']`).insertAdjacentHTML("afterend",'\n        <tr class="trLoading">\n            <td colspan="6">\n                <div class="loading"></div>\n            </td>\n        </tr>\n    ')},showDeleteDialog=e=>{Swal.fire({title:`¿Desea borrar la cita #${e}?`,showCancelButton:!0,cancelButtonText:"Cancelar",confirmButtonText:"Eliminar"}).then(t=>{t.isConfirmed&&deleteAppointment(e)})},deleteAppointment=async e=>{const t=serverUrl+"api/deleteAppointment",n=new FormData;n.append("appointmentId",e);try{const e=await fetch(t,{method:"POST",body:n});(await e.json()).result&&Swal.fire({icon:"success",title:"Cita eliminada",text:"¡Cita eliminada correctamente!"}).then(()=>{window.location.reload()})}catch(e){Swal.fire({icon:"error",title:"Error",text:"Ocurrió un error elimiando la cita"})}};